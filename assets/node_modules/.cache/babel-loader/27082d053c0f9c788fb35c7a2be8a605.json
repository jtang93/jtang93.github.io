{"ast":null,"code":"var _jsxFileName = \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/mapbox.js\";\nimport React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\nvar Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoianRhbmc5MyIsImEiOiJjanB1OXIyZXQwZWZ4M3hudHM4NGl0cmc3In0.q6DGhvJla097_6b-RMi0Fw\"\n});\n\nvar mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding');\n\nvar geocodingClient = mbxGeocoding({\n  accessToken: 'pk.eyJ1IjoianRhbmc5MyIsImEiOiJjanB1OXIyZXQwZWZ4M3hudHM4NGl0cmc3In0.q6DGhvJla097_6b-RMi0Fw'\n});\n\nvar Mapbox = function Mapbox(props) {\n  var geojson;\n  var locations = [];\n  fetch('http://localhost:4000/api/v1/listings').then(function (r) {\n    return r.json();\n  }).then(function (parsed) {\n    geojson = parsed;\n    console.log(geojson);\n    geojson.map(function (listing) {\n      geocodingClient.forwardGeocode({\n        query: \"\".concat(listing.location),\n        limit: 1\n      }).send().then(function (response) {\n        var match = response.body.features[0].center;\n        locations.push(match);\n        console.log(locations);\n      });\n    });\n  });\n\n  var makeFeatures = function makeFeatures() {\n    locations.each(function (coordinate) {\n      return React.createElement(Feature, {\n        coordinates: coordinate,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    });\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Map, {\n    style: \"mapbox://styles/mapbox/streets-v9\",\n    center: [-74.0060, 40.7128],\n    containerStyle: {\n      height: \"100vh\",\n      width: \"100vw\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(Layer, {\n    type: \"symbol\",\n    id: \"marker\",\n    layout: {\n      \"icon-image\": \"marker-15\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, makeFeatures()), React.createElement(Layer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(GeoJSONLayer, {\n    data: geojson,\n    symbolLayout: {\n      \"text-field\": \"{place}\",\n      \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n      \"text-offset\": [0, 0.6],\n      \"text-anchor\": \"top\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }))));\n};\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/mapbox.js"],"names":["React","Component","ReactMapboxGl","Layer","Feature","GeoJSONLayer","Map","accessToken","mbxGeocoding","require","geocodingClient","Mapbox","props","geojson","locations","fetch","then","r","json","parsed","console","log","map","listing","forwardGeocode","query","location","limit","send","response","match","body","features","center","push","makeFeatures","each","coordinate","height","width"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,IAAwBC,KAAxB,EAA+BC,OAA/B,QAA8C,iBAA9C;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAEA,IAAMC,GAAG,GAAGJ,aAAa,CAAC;AACxBK,EAAAA,WAAW,EAAE;AADW,CAAD,CAAzB;;AAIA,IAAMC,YAAY,GAAGC,OAAO,CAAC,uCAAD,CAA5B;;AACA,IAAMC,eAAe,GAAGF,YAAY,CAAC;AAAED,EAAAA,WAAW,EAAE;AAAf,CAAD,CAApC;;AAEA,IAAMI,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAExB,MAAIC,OAAJ;AACA,MAAIC,SAAS,GAAG,EAAhB;AAEAC,EAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACM,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GADP,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACdN,IAAAA,OAAO,GAAGM,MAAV;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYR,OAAZ;AAEAA,IAAAA,OAAO,CAACS,GAAR,CAAY,UAAAC,OAAO,EAAI;AACrBb,MAAAA,eAAe,CACdc,cADD,CACgB;AACdC,QAAAA,KAAK,YAAKF,OAAO,CAACG,QAAb,CADS;AAEdC,QAAAA,KAAK,EAAE;AAFO,OADhB,EAKCC,IALD,GAMCZ,IAND,CAMM,UAAAa,QAAQ,EAAI;AAChB,YAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcC,QAAd,CAAuB,CAAvB,EAA0BC,MAAxC;AACAnB,QAAAA,SAAS,CAACoB,IAAV,CAAeJ,KAAf;AACAV,QAAAA,OAAO,CAACC,GAAR,CAAYP,SAAZ;AACD,OAVD;AAWD,KAZD;AAaD,GAnBD;;AAqBA,MAAMqB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBrB,IAAAA,SAAS,CAACsB,IAAV,CAAe,UAAAC,UAAU,EAAI;AAC3B,aACE,oBAAC,OAAD;AAAS,QAAA,WAAW,EAAEA,UAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KAJD;AAKD,GAND;;AAQA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AACA,IAAA,KAAK,EAAC,mCADN;AAEA,IAAA,MAAM,EAAE,CAAC,CAAC,OAAF,EAAW,OAAX,CAFR;AAGA,IAAA,cAAc,EAAE;AACdC,MAAAA,MAAM,EAAE,OADM;AAEdC,MAAAA,KAAK,EAAE;AAFO,KAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,KAAD;AACA,IAAA,IAAI,EAAC,QADL;AAEA,IAAA,EAAE,EAAC,QAFH;AAGA,IAAA,MAAM,EAAE;AAAE,oBAAc;AAAhB,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAICJ,YAAY,EAJb,CAPF,EAcE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,YAAD;AACA,IAAA,IAAI,EAAEtB,OADN;AAEA,IAAA,YAAY,EAAE;AACZ,oBAAc,SADF;AAEZ,mBAAa,CAAC,oBAAD,EAAuB,uBAAvB,CAFD;AAGZ,qBAAe,CAAC,CAAD,EAAI,GAAJ,CAHH;AAIZ,qBAAe;AAJH,KAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CAdF,CADF,CADA;AAiCC,CAnED;;AAqEA,eAAeF,MAAf","sourcesContent":["import React, { Component } from 'react'\nimport ReactMapboxGl, { Layer, Feature } from \"react-mapbox-gl\";\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\n\nconst Map = ReactMapboxGl({\n  accessToken: \"pk.eyJ1IjoianRhbmc5MyIsImEiOiJjanB1OXIyZXQwZWZ4M3hudHM4NGl0cmc3In0.q6DGhvJla097_6b-RMi0Fw\"\n})\n\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding');\nconst geocodingClient = mbxGeocoding({ accessToken: 'pk.eyJ1IjoianRhbmc5MyIsImEiOiJjanB1OXIyZXQwZWZ4M3hudHM4NGl0cmc3In0.q6DGhvJla097_6b-RMi0Fw' });\n\nconst Mapbox = props => {\n\nlet geojson\nlet locations = []\n\nfetch('http://localhost:4000/api/v1/listings')\n.then(r => r.json())\n.then(parsed => {\n  geojson = parsed\n  console.log(geojson)\n\n  geojson.map(listing => {\n    geocodingClient\n    .forwardGeocode({\n      query: `${listing.location}`,\n      limit: 1\n    })\n    .send()\n    .then(response => {\n      const match = response.body.features[0].center;\n      locations.push(match)\n      console.log(locations)\n    });\n  })\n})\n\nconst makeFeatures = () => {\n  locations.each(coordinate => {\n    return (\n      <Feature coordinates={coordinate}/>\n    )\n  })\n}\n\nreturn (\n<div>\n  <Map\n  style=\"mapbox://styles/mapbox/streets-v9\"\n  center={[-74.0060, 40.7128]}\n  containerStyle={{\n    height: \"100vh\",\n    width: \"100vw\"\n  }}>\n    <Layer\n    type=\"symbol\"\n    id=\"marker\"\n    layout={{ \"icon-image\": \"marker-15\" }}>\n    {makeFeatures()}\n    </Layer>\n\n    <Layer>\n    <GeoJSONLayer\n    data={geojson}\n    symbolLayout={{\n      \"text-field\": \"{place}\",\n      \"text-font\": [\"Open Sans Semibold\", \"Arial Unicode MS Bold\"],\n      \"text-offset\": [0, 0.6],\n      \"text-anchor\": \"top\"\n    }}/>\n    </Layer>\n  </Map>\n\n\n  </div>\n)\n\n\n}\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/mapbox.js\";\nimport React, { Component } from 'react';\nimport ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\nvar Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_KEY\n});\n\nvar mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding');\n\nvar geocodingClient = mbxGeocoding({\n  accessToken: process.env.REACT_APP_KEY\n});\n\nvar Mapbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mapbox, _React$Component);\n\n  function Mapbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mapbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mapbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      locations: [],\n      geojson: null,\n      currentListing: null\n    };\n\n    _this.makeFeatures = function () {\n      console.log(\"locations\", _this.state.locations);\n\n      var pins = _this.state.locations.map(function (coordinate) {\n        return React.createElement(Feature, {\n          coordinates: coordinate,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        });\n      });\n\n      console.log(\"pins\", pins);\n      return pins;\n    };\n\n    return _this;\n  }\n\n  _createClass(Mapbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/api/v1/listings').then(function (r) {\n        return r.json();\n      }).then(function (parsed) {\n        _this2.setState({\n          geojson: parsed\n        });\n\n        console.log(_this2.state.geojson);\n\n        _this2.state.geojson.map(function (listing) {\n          var locations = _this2.state.locations;\n          var coordinates = listing.coordinates.split(\",\").map(function (n) {\n            return parseFloat(n);\n          });\n\n          _this2.setState({\n            locations: [].concat(_toConsumableArray(locations), [coordinates])\n          });\n        });\n\n        console.log(\"locations\", _this2.state.locations);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(Map, {\n        style: \"mapbox://styles/mapbox/streets-v9\",\n        center: [-74.0060, 40.7128],\n        containerStyle: {\n          height: \"100vh\",\n          width: \"100vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"marker\",\n        layout: {\n          \"icon-image\": \"rocket-15\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, this.makeFeatures()), React.createElement(Layer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Popup, {\n        coordinates: [-74.01252313232544, 40.704732234146974],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"hello\")))));\n    }\n  }]);\n\n  return Mapbox;\n}(React.Component);\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/mapbox.js"],"names":["React","Component","ReactMapboxGl","Layer","Feature","Popup","GeoJSONLayer","Map","accessToken","process","env","REACT_APP_KEY","mbxGeocoding","require","geocodingClient","Mapbox","state","locations","geojson","currentListing","makeFeatures","console","log","pins","map","coordinate","fetch","then","r","json","parsed","setState","listing","coordinates","split","n","parseFloat","height","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactMapboxGl, { Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_KEY\n})\n\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding');\nconst geocodingClient = mbxGeocoding({ accessToken: process.env.REACT_APP_KEY });\n\nclass Mapbox extends React.Component {\n\nstate = {\n  locations: [],\n  geojson: null,\n  currentListing: null\n}\n\ncomponentDidMount() {\n  fetch('http://localhost:4000/api/v1/listings')\n  .then(r => r.json())\n  .then(parsed => {\n    this.setState({geojson: parsed})\n    console.log(this.state.geojson)\n\n    this.state.geojson.map(listing => {\n        let locations = this.state.locations\n        let coordinates = listing.coordinates.split(\",\").map(n => parseFloat(n))\n        this.setState({locations: [...locations, coordinates]})\n    })\n    console.log(\"locations\", this.state.locations)\n  })\n}\n\nmakeFeatures = () => {\n  console.log(\"locations\", this.state.locations)\n  let pins = this.state.locations.map(coordinate =>\n      <Feature coordinates={coordinate} />)\n  console.log(\"pins\",pins)\n  return(pins)\n}\n\n\n\nrender() {\n  return (\n    <div>\n      <Map\n      style=\"mapbox://styles/mapbox/streets-v9\"\n      center={[-74.0060, 40.7128]}\n      containerStyle={{\n        height: \"100vh\",\n        width: \"100vw\"\n      }}>\n\n        <Layer\n        type=\"symbol\"\n        id=\"marker\"\n        layout={{ \"icon-image\": \"rocket-15\" }}>\n\n          {this.makeFeatures()}\n\n        </Layer>\n        <Layer>\n        <Popup coordinates={[-74.01252313232544, 40.704732234146974]}>\n          <h1>\n            hello\n          </h1>\n        </Popup>\n        </Layer>\n\n      </Map>\n\n\n    </div>\n  )\n}\n\n\n}\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}
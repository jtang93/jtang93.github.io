{"ast":null,"code":"import _toConsumableArray from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/main.js\";\nimport React, { Component } from 'react';\nimport TopNav from './navbar';\nimport Map from './mapbox';\n\nvar Main =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Main, _React$Component);\n\n  function Main() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Main);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Main)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      allListings: [],\n      listings: [],\n      filter: null\n    };\n\n    _this.updateListings = function (item) {\n      var listings = _this.state.listings;\n\n      _this.setState({\n        listings: [].concat(_toConsumableArray(listings), [item])\n      });\n\n      _this.setState({\n        allListings: [].concat(_toConsumableArray(listings), [item])\n      });\n    };\n\n    _this.filterListings = function (filter) {\n      var listings = _this.state.allListings;\n      var filteredListings = listings.filter(function (listing) {\n        return listing.item.includes(filter);\n      }); // debugger\n\n      _this.setState({\n        listings: filteredListings\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Main, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/api/v1/listings').then(function (r) {\n        return r.json();\n      }).then(function (parsed) {\n        _this2.setState({\n          listings: parsed\n        });\n\n        _this2.setState({\n          allListings: parsed\n        });\n\n        console.log(_this2.state.listings);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(TopNav, {\n        updateListings: this.updateListings,\n        filterListings: this.filterListings,\n        listings: this.state.listings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(Map, {\n        listings: this.state.listings,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Main;\n}(React.Component);\n\nexport { Main as default };","map":{"version":3,"sources":["/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/main.js"],"names":["React","Component","TopNav","Map","Main","state","allListings","listings","filter","updateListings","item","setState","filterListings","filteredListings","listing","includes","fetch","then","r","json","parsed","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,GAAP,MAAgB,UAAhB;;IAEqBC,I;;;;;;;;;;;;;;;;;UAEnBC,K,GAAQ;AACNC,MAAAA,WAAW,EAAE,EADP;AAENC,MAAAA,QAAQ,EAAE,EAFJ;AAGNC,MAAAA,MAAM,EAAE;AAHF,K;;UAgBRC,c,GAAiB,UAACC,IAAD,EAAU;AACzB,UAAIH,QAAQ,GAAG,MAAKF,KAAL,CAAWE,QAA1B;;AACA,YAAKI,QAAL,CAAc;AAACJ,QAAAA,QAAQ,+BAAMA,QAAN,IAAgBG,IAAhB;AAAT,OAAd;;AACA,YAAKC,QAAL,CAAc;AAACL,QAAAA,WAAW,+BAAMC,QAAN,IAAgBG,IAAhB;AAAZ,OAAd;AACD,K;;UAEDE,c,GAAiB,UAACJ,MAAD,EAAY;AAC3B,UAAID,QAAQ,GAAG,MAAKF,KAAL,CAAWC,WAA1B;AACA,UAAIO,gBAAgB,GAAGN,QAAQ,CAACC,MAAT,CAAgB,UAAAM,OAAO;AAAA,eAAIA,OAAO,CAACJ,IAAR,CAAaK,QAAb,CAAsBP,MAAtB,CAAJ;AAAA,OAAvB,CAAvB,CAF2B,CAG3B;;AACA,YAAKG,QAAL,CAAc;AAACJ,QAAAA,QAAQ,EAAEM;AAAX,OAAd;AACD,K;;;;;;;wCArBmB;AAAA;;AAClBG,MAAAA,KAAK,CAAC,uCAAD,CAAL,CACCC,IADD,CACM,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,OADP,EAECF,IAFD,CAEM,UAAAG,MAAM,EAAI;AACd,QAAA,MAAI,CAACT,QAAL,CAAc;AAACJ,UAAAA,QAAQ,EAAEa;AAAX,SAAd;;AACA,QAAA,MAAI,CAACT,QAAL,CAAc;AAACL,UAAAA,WAAW,EAAEc;AAAd,SAAd;;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAI,CAACjB,KAAL,CAAWE,QAAvB;AACD,OAND;AAOD;;;6BAeS;AACR,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,cAAc,EAAE,KAAKE,cAA7B;AAA6C,QAAA,cAAc,EAAE,KAAKG,cAAlE;AAAkF,QAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWE,QAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWE,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADA;AAMD;;;;EAtC+BP,KAAK,CAACC,S;;SAAnBG,I","sourcesContent":["import React, { Component } from 'react'\nimport TopNav from './navbar'\nimport Map from './mapbox'\n\nexport default class Main extends React.Component {\n\n  state = {\n    allListings: [],\n    listings: [],\n    filter: null\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:4000/api/v1/listings')\n    .then(r => r.json())\n    .then(parsed => {\n      this.setState({listings: parsed})\n      this.setState({allListings: parsed})\n      console.log(this.state.listings)\n    })\n  }\n\n  updateListings = (item) => {\n    let listings = this.state.listings\n    this.setState({listings: [...listings, item]})\n    this.setState({allListings: [...listings, item]})\n  }\n\n  filterListings = (filter) => {\n    let listings = this.state.allListings\n    let filteredListings = listings.filter(listing => listing.item.includes(filter))\n    // debugger\n    this.setState({listings: filteredListings})\n  }\n\n  render () {\n    return(\n    <div>\n      <TopNav updateListings={this.updateListings} filterListings={this.filterListings} listings={this.state.listings}/>\n      <Map listings={this.state.listings} />\n    </div>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
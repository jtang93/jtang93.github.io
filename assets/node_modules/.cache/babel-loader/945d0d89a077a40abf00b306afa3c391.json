{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/mapbox.js\";\nimport React, { Component } from 'react';\nimport ReactMapboxGl, { Marker, Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\nvar Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_KEY\n});\n\nvar mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding');\n\nvar geocodingClient = mbxGeocoding({\n  accessToken: process.env.REACT_APP_KEY\n});\n\nvar Mapbox =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Mapbox, _React$Component);\n\n  function Mapbox() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Mapbox);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Mapbox)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      listings: [],\n      currentListing: [],\n      mapCenter: [-74.0060, 40.7128]\n    };\n\n    _this.cStringToGeocode = function (listing) {\n      listing.coordinates.split(\",\").map(function (n) {\n        return parseFloat(n);\n      });\n    };\n\n    _this.makeFeatures = function () {\n      var pins = _this.state.listings.map(function (listing) {\n        return React.createElement(Marker, {\n          coordinates: listing.coordinates.split(\",\").map(function (n) {\n            return parseFloat(n);\n          }),\n          onClick: function onClick(e) {\n            return _this.clickHandler(e, listing);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      });\n\n      console.log(\"pins\", pins);\n      return pins;\n    };\n\n    _this.clickHandler = function (e, listing) {\n      console.log(e);\n      console.log(listing);\n\n      _this.setState({\n        currentListing: [listing]\n      });\n\n      console.log(\"current listing:\", _this.state.currentListing); // this.setState({mapCenter: this.cStringToGeocode(listing)})\n    };\n\n    _this.makePopups = function (listing) {\n      return React.createElement(Popup, {\n        coordinates: _this.cStringToGeocode(listing),\n        anchor: \"top\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Item: \", _this.state.currentListing.item), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \"Condition: \", _this.state.currentListing.condition), React.createElement(\"li\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Location: \", _this.state.currentListing.location)));\n    };\n\n    return _this;\n  }\n\n  _createClass(Mapbox, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:4000/api/v1/listings').then(function (r) {\n        return r.json();\n      }).then(function (parsed) {\n        _this2.setState({\n          listings: parsed\n        });\n\n        console.log(_this2.state.listings);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Map, {\n        style: \"mapbox://styles/mapbox/streets-v9\",\n        center: this.state.mapCenter,\n        containerStyle: {\n          height: \"100vh\",\n          width: \"100vw\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Layer, {\n        type: \"symbol\",\n        id: \"marker\",\n        layout: {\n          \"icon-image\": \"rocket-15\"\n        },\n        color: \"#01FEDC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.makeFeatures()), this.state.currentListing.length > 0 ? this.makePopups(this.state.currentListing[0]) : null));\n    }\n  }]);\n\n  return Mapbox;\n}(React.Component);\n\nexport default Mapbox;","map":{"version":3,"sources":["/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/mapbox.js"],"names":["React","Component","ReactMapboxGl","Marker","Layer","Feature","Popup","GeoJSONLayer","Map","accessToken","process","env","REACT_APP_KEY","mbxGeocoding","require","geocodingClient","Mapbox","state","listings","currentListing","mapCenter","cStringToGeocode","listing","coordinates","split","map","n","parseFloat","makeFeatures","pins","e","clickHandler","console","log","setState","makePopups","item","condition","location","fetch","then","r","json","parsed","height","width","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport ReactMapboxGl, { Marker, Layer, Feature, Popup } from \"react-mapbox-gl\";\nimport { GeoJSONLayer } from \"react-mapbox-gl\";\n\nconst Map = ReactMapboxGl({\n  accessToken: process.env.REACT_APP_KEY\n})\n\nconst mbxGeocoding = require('@mapbox/mapbox-sdk/services/geocoding');\nconst geocodingClient = mbxGeocoding({ accessToken: process.env.REACT_APP_KEY });\n\nclass Mapbox extends React.Component {\n\nstate = {\n  listings: [],\n  currentListing: [],\n  mapCenter: [-74.0060, 40.7128]\n}\n\ncomponentDidMount() {\n  fetch('http://localhost:4000/api/v1/listings')\n  .then(r => r.json())\n  .then(parsed => {\n    this.setState({listings: parsed})\n    console.log(this.state.listings)\n  })\n}\n\ncStringToGeocode = (listing) => {\n  listing.coordinates.split(\",\").map(n => parseFloat(n))\n}\n\nmakeFeatures = () => {\n  let pins = this.state.listings.map(listing =>\n    <Marker coordinates={listing.coordinates.split(\",\").map(n => parseFloat(n))} onClick={(e) => this.clickHandler(e, listing)}/>\n  )\n  console.log(\"pins\",pins)\n  return(pins)\n}\n\nclickHandler = (e, listing) => {\n  console.log(e)\n  console.log(listing)\n  this.setState({currentListing: [listing]})\n  console.log(\"current listing:\", this.state.currentListing)\n  // this.setState({mapCenter: this.cStringToGeocode(listing)})\n}\n\nmakePopups = (listing) => {\n  return( <Popup\n    coordinates={this.cStringToGeocode(listing)}\n    anchor=\"top\"\n    >\n    <ul>\n    <li>Item: {this.state.currentListing.item}</li>\n    <li>Condition: {this.state.currentListing.condition}</li>\n    <li>Location: {this.state.currentListing.location}</li>\n    </ul>\n    </Popup>)\n  }\n\nrender() {\n  return (\n    <div>\n      <Map\n      style=\"mapbox://styles/mapbox/streets-v9\"\n      center={this.state.mapCenter}\n      containerStyle={{\n        height: \"100vh\",\n        width: \"100vw\"\n      }}>\n\n        <Layer\n        type=\"symbol\"\n        id=\"marker\"\n        layout={{ \"icon-image\": \"rocket-15\" }}\n        color=\"#01FEDC\">\n\n          {this.makeFeatures()}\n\n        </Layer>\n\n        {this.state.currentListing.length > 0?this.makePopups(this.state.currentListing[0]):null}\n\n\n\n      </Map>\n\n\n    </div>\n  )\n}\n\n\n}\n\nexport default Mapbox\n"]},"metadata":{},"sourceType":"module"}
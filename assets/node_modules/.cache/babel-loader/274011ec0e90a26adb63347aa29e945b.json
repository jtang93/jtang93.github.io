{"ast":null,"code":"import _classCallCheck from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/navbar.js\";\nimport React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, FormControl } from 'react-bootstrap';\nimport SubmitForm from './submitForm';\n\nvar TopNav =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TopNav, _React$Component);\n\n  function TopNav() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TopNav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TopNav)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      formDisplay: false,\n      filterDisplay: false\n    };\n\n    _this.clickHandler = function () {\n      var currentState = _this.state.formDisplay;\n\n      _this.setState({\n        formDisplay: !currentState\n      });\n    };\n\n    _this.renderForm = function () {\n      if (_this.state.formDisplay) {\n        return React.createElement(\"div\", {\n          className: \"popupForm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, React.createElement(SubmitForm, {\n          updateListings: _this.props.updateListings,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }));\n      }\n    };\n\n    _this.filterClickHandler = function () {\n      var currentState = _this.state.filterDisplay;\n\n      _this.setState({\n        filterDisplay: !currentState\n      });\n    };\n\n    _this.renderFilterInput = function () {\n      if (_this.state.filterDisplay) {\n        return React.createElement(\"input\", {\n          type: \"text\",\n          className: \"navFilter\",\n          placeholder: \"Enter filter\",\n          onChange: _this.changeHandler,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        });\n      }\n    };\n\n    _this.changeHandler = function (e) {\n      debugger; // this.setState({ [semanticInputData.name]: semanticInputData.value })\n\n      _this.props.filterListings(e.target.value);\n    };\n\n    return _this;\n  }\n\n  _createClass(TopNav, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        inverse: true,\n        collapseOnSelect: true,\n        className: \"navbarContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Navbar.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Navbar.Brand, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#brand\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Freesh\")), React.createElement(Navbar.Toggle, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      })), React.createElement(Navbar.Collapse, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Nav, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(NavItem, {\n        onSelect: function onSelect() {\n          return _this2.filterClickHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Filter\"), this.renderFilterInput()), React.createElement(Nav, {\n        pullRight: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"info\",\n        className: \"navBarBtn\",\n        onClick: function onClick() {\n          return _this2.clickHandler();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"New Listing\")))), this.renderForm());\n    }\n  }]);\n\n  return TopNav;\n}(React.Component);\n\nexport default TopNav;","map":{"version":3,"sources":["/Users/flatironschool/Projects/mod5-final-project/Freesh/frontend/src/components/main/navbar.js"],"names":["React","Component","Navbar","Nav","NavItem","Button","FormControl","SubmitForm","TopNav","state","formDisplay","filterDisplay","clickHandler","currentState","setState","renderForm","props","updateListings","filterClickHandler","renderFilterInput","changeHandler","e","filterListings","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Navbar, Nav, NavItem, Button, FormControl } from 'react-bootstrap'\nimport SubmitForm from './submitForm'\n\nclass TopNav extends React.Component {\n\n  state = {\n    formDisplay: false,\n    filterDisplay: false,\n  }\n\n  clickHandler = () => {\n    let currentState = this.state.formDisplay\n    this.setState({formDisplay: !currentState})\n  }\n\n  renderForm = () => {\n    if (this.state.formDisplay) {\n      return(\n        <div className=\"popupForm\" >\n        <SubmitForm updateListings={this.props.updateListings}/>\n        </div>\n      )\n    }\n  }\n\n  filterClickHandler = () => {\n    let currentState = this.state.filterDisplay\n    this.setState({filterDisplay: !currentState})\n  }\n\n  renderFilterInput = () => {\n    if (this.state.filterDisplay) {\n      return(\n        <input\n        type=\"text\"\n        className=\"navFilter\"\n        placeholder=\"Enter filter\"\n        onChange={this.changeHandler}\n        />\n      )\n    }\n  }\n\n  changeHandler = (e) => {\n    debugger\n    // this.setState({ [semanticInputData.name]: semanticInputData.value })\n    this.props.filterListings(e.target.value)\n  }\n\nrender() {\n  return(\n    <div>\n    <Navbar inverse collapseOnSelect className=\"navbarContainer\">\n    <Navbar.Header>\n      <Navbar.Brand>\n        <a href=\"#brand\">Freesh</a>\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      </Navbar.Header>\n      <Navbar.Collapse>\n\n      <Nav>\n        <NavItem onSelect={() => this.filterClickHandler()}>\n          Filter\n        </NavItem>\n        {this.renderFilterInput()}\n      </Nav>\n\n      <Nav pullRight>\n        <Button bsStyle=\"info\" className=\"navBarBtn\" onClick={() => this.clickHandler()}>New Listing</Button>\n      </Nav>\n      {/*\n        <Nav pullRight>\n        <NavItem eventKey={1} href=\"#\">\n        Settings\n        </NavItem>\n        <NavItem eventKey={2} href=\"#\">\n        Log Out\n        </NavItem>\n        </Nav>\n      */}\n      </Navbar.Collapse>\n    </Navbar>\n\n    {this.renderForm()}\n\n    </div>\n  )\n}\n}\n\nexport default TopNav\n"]},"metadata":{},"sourceType":"module"}